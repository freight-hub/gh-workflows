name: "[PR] Build, lint and test (Mongo)"

on:
  workflow_call:
    inputs:
      TEST_COMMAND:
        required: false
        type: string
        default: 'test --ci --coverage'
      FORMAT_COMMAND:
        required: false
        type: string
        default: 'format:check'
      LINT_COMMAND:
        required: false
        type: string
        default: 'lint'
      NODE_VERSION:
        required: false
        type: string
        default: '20'
      TEST_ENVIRONMENT:
        required: false
        type: string
        default: 'integration'
      DB_MONGO_USERNAME:
        required: false
        type: string
        default: 'root'
      DB_MONGO_PASSWORD:
        required: false
        type: string
        default: 'integration'
      DB_MONGO_DATABASE:
        required: false
        type: string
        default: 'integration-db'
      TEST_TYPE:
        required: false
        type: choice
        default: 'integration'
        options:
          - unit
          - integration

    secrets:
      VERDACCIO_FORTO_IO_TOKEN:
        required: true

env:
  VERDACCIO_FORTO_IO_TOKEN: ${{ secrets.VERDACCIO_FORTO_IO_TOKEN }}

jobs:
  build-lint-test:
    name: Build - Lint Check - Test
    runs-on: ubuntu-22.04
    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ inputs.DB_MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ inputs.DB_MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ inputs.DB_MONGO_DATABASE }}
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mongo
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn ${{ inputs.FORMAT_COMMAND }}
      - run: yarn ${{ inputs.LINT_COMMAND }}
      - run: yarn build
      - run: yarn ${{ inputs.COMMAND }}
        env:
          MONGO__URI: mongodb://${{ inputs.DB_MONGO_USERNAME }}:${{ inputs.DB_MONGO_PASSWORD }}@127.0.0.1:27017/${{ inputs.DB_MONGO_DATABASE }}?authSource=admin
          NODE_ENV: ${{ inputs.TEST_ENVIRONMENT }}
          JEST_JUNIT_OUTPUT: "coverage/junit/junit.xml"
          DB_MONGO_URI: mongodb://localhost:27017
          DB_MONGO_PASSWORD: ${{ inputs.DB_MONGO_PASSWORD }}
          DB_MONGO_USERNAME: ${{ inputs.DB_MONGO_USERNAME }}
          DB_MONGO_DATABASE: ${{ inputs.DB_MONGO_DATABASE }}
      # If the branch is main, overwrite the main-coverage file
      - name: Upload coverage report artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage/${{ inputs.TEST_TYPE }}/coverage-summary.json
          overwrite: true
